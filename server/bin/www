#!/usr/bin/env node

const debug = require('debug')('app');
const app = require('../index');
// const models = require("../models");
// const _ = require('lodash');

// // DB Setup
const mongoose = require('mongoose');
//implement node promise library
mongoose.Promise = global.Promise;

mongoose.connect('mongodb://localhost:auth/auth');
  mongoose.connection
    .once('open', () => { console.log('mongoDB connected') })
    .on('error', (error) => {
      console.warn('Warning', error);
    });

console.log("NODE_ENV : ", process.env.NODE_ENV);
//use an environment variable to change the port # depending if it's deployed on a server or locally.
//express usually uses port 3000 so we can use that as a fallback if no env variable exists
app.set('port', process.env.PORT || 3090);

//else models.sequelize won't work, just serve up static
var server = app.listen(app.get('port'), function () {
  debug('Express server listening on port ' + server.address().port);
});

// //if our models object isn't empty
// if (!_.isEmpty(models)) {
//   //safe to use the function
//   models.sequelize.sync().then(function () {
//     var server = app.listen(app.get('port'), function () {
//       debug('Express server listening on port ' + server.address().port);
//     });
//   });
// } else {
//     //else models.sequelize won't work, just serve up static
//     var server = app.listen(app.get('port'), function () {
//     debug('Express server listening on port ' + server.address().port);
//   });
// }